"""Initial database schema

Revision ID: 086828fa1d96
Revises: 
Create Date: 2025-08-14 14:48:18.861607

"""
from typing import Sequence, Union

import pgvector
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '086828fa1d96'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat_sessions',
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('session_name', sa.String(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_index('idx_session_last_activity', 'chat_sessions', ['last_activity'], unique=False)
    op.create_index('idx_session_user_id', 'chat_sessions', ['user_id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=True),
    sa.Column('file_type', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('file_hash', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename')
    )
    op.create_index('idx_document_content_type', 'documents', ['content_type'], unique=False)
    op.create_index('idx_document_file_hash', 'documents', ['file_hash'], unique=False)
    op.create_index('idx_document_filename', 'documents', ['filename'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('message_type', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('query_type', sa.String(), nullable=True),
    sa.Column('response_time', sa.Float(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('sources', sa.JSON(), nullable=True),
    sa.Column('warnings', sa.JSON(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.session_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_message_created_at', 'chat_messages', ['created_at'], unique=False)
    op.create_index('idx_message_query_type', 'chat_messages', ['query_type'], unique=False)
    op.create_index('idx_message_session_id', 'chat_messages', ['session_id'], unique=False)
    op.create_index('idx_message_type', 'chat_messages', ['message_type'], unique=False)
    op.create_table('document_chunks',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('document_id', sa.String(), nullable=False),
    sa.Column('chunk_text', sa.Text(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True),
    sa.Column('chunk_type', sa.String(), nullable=True),
    sa.Column('medical_category', sa.String(), nullable=True),
    sa.Column('urgency_level', sa.String(), nullable=True),
    sa.Column('contains_contact', sa.Boolean(), nullable=True),
    sa.Column('contains_dosage', sa.Boolean(), nullable=True),
    sa.Column('page_number', sa.Integer(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id', 'chunk_index', name='uq_document_chunk_index')
    )
    op.create_index('idx_chunk_contains_contact', 'document_chunks', ['contains_contact'], unique=False)
    op.create_index('idx_chunk_contains_dosage', 'document_chunks', ['contains_dosage'], unique=False)
    op.create_index('idx_chunk_document_id', 'document_chunks', ['document_id'], unique=False)
    op.create_index('idx_chunk_medical_category', 'document_chunks', ['medical_category'], unique=False)
    op.create_index('idx_chunk_urgency', 'document_chunks', ['urgency_level'], unique=False)
    op.create_table('document_registry',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('document_id', sa.String(), nullable=False),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('quick_access', sa.Boolean(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_registry_category', 'document_registry', ['category'], unique=False)
    op.create_index('idx_registry_document_id', 'document_registry', ['document_id'], unique=False)
    # Skip keywords index - JSON arrays can't be indexed directly
    op.create_index('idx_registry_priority', 'document_registry', ['priority'], unique=False)
    op.create_index('idx_registry_quick_access', 'document_registry', ['quick_access'], unique=False)
    op.create_table('extracted_entities',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('document_id', sa.String(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('page_no', sa.Integer(), nullable=True),
    sa.Column('span', sa.JSON(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('evidence_text', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_entity_document_id', 'extracted_entities', ['document_id'], unique=False)
    op.create_index('idx_entity_page', 'extracted_entities', ['page_no'], unique=False)
    # Skip payload index - JSON can't be indexed directly
    op.create_index('idx_entity_type', 'extracted_entities', ['entity_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_entity_type', table_name='extracted_entities')
    # Payload index not created
    op.drop_index('idx_entity_page', table_name='extracted_entities')
    op.drop_index('idx_entity_document_id', table_name='extracted_entities')
    op.drop_table('extracted_entities')
    op.drop_index('idx_registry_quick_access', table_name='document_registry')
    op.drop_index('idx_registry_priority', table_name='document_registry')
    # Keywords index not created
    op.drop_index('idx_registry_document_id', table_name='document_registry')
    op.drop_index('idx_registry_category', table_name='document_registry')
    op.drop_table('document_registry')
    op.drop_index('idx_chunk_urgency', table_name='document_chunks')
    op.drop_index('idx_chunk_medical_category', table_name='document_chunks')
    op.drop_index('idx_chunk_document_id', table_name='document_chunks')
    op.drop_index('idx_chunk_contains_dosage', table_name='document_chunks')
    op.drop_index('idx_chunk_contains_contact', table_name='document_chunks')
    op.drop_table('document_chunks')
    op.drop_index('idx_message_type', table_name='chat_messages')
    op.drop_index('idx_message_session_id', table_name='chat_messages')
    op.drop_index('idx_message_query_type', table_name='chat_messages')
    op.drop_index('idx_message_created_at', table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index('idx_document_filename', table_name='documents')
    op.drop_index('idx_document_file_hash', table_name='documents')
    op.drop_index('idx_document_content_type', table_name='documents')
    op.drop_table('documents')
    op.drop_index('idx_session_user_id', table_name='chat_sessions')
    op.drop_index('idx_session_last_activity', table_name='chat_sessions')
    op.drop_table('chat_sessions')
    # ### end Alembic commands ###